/*****************************************************************************
 *
 *  PROJECT:     Multi Theft Auto v1.0
 *  LICENSE:     See LICENSE in the top level directory
 *  FILE:        sdk/game/Common.h
 *  PURPOSE:     Grand Theft Auto: San Andreas game definitions
 *
 *  Multi Theft Auto is available from http://www.multitheftauto.com/
 *
 *****************************************************************************/

#pragma once

#include <windows.h>
#include <stdint.h>

// Limits for MTA
#define MAX_VEHICLES_MTA             64
#define MAX_PEDS_MTA                 110
#define MAX_OBJECTS_MTA              600
#define MAX_ENTRY_INFO_NODES_MTA     1600
#define MAX_POINTER_SINGLE_LINKS_MTA 85000
#define MAX_POINTER_DOUBLE_LINKS_MTA 1500
///
#define MAX_VEHICLES             (MAX_VEHICLES_MTA + 46)
#define MAX_PEDS                 (MAX_PEDS_MTA + 30)
#define MAX_OBJECTS              (MAX_OBJECTS_MTA + 200)
#define MAX_BUILDINGS            13000
#define MAX_ENTRY_INFO_NODES     1600
#define MAX_POINTER_SINGLE_LINKS 85000
#define MAX_POINTER_DOUBLE_LINKS 1500
#define MAX_RWOBJECT_INSTANCES   2500

/**
 * Flags used to define weapon characteristics
 */
// aiming options
#define WEAPONTYPE_CANAIM           (0x000001)  // can auto target to aim
#define WEAPONTYPE_CANAIMWITHARM    (0x000002)  // only needs arm to aim
#define WEAPONTYPE_FIRSTPERSON      (0x000004)  // uses 1st person aim
#define WEAPONTYPE_CANFREEAIM       (0x000008)  // can only use free aiming

// movement options
#define WEAPONTYPE_MOVEAIM          (0x000010)  // can move and aim at same time
#define WEAPONTYPE_MOVEFIRE         (0x000020)  // can move and fire at same time

// basic characteristics
#define WEAPONTYPE_THROW            (0x000100)  // is a throwing weapon
#define WEAPONTYPE_HEAVY            (0x000200)  // heavy weapon - can't jump
#define WEAPONTYPE_CONTINUOUS_FIRE  (0x000400)  // fires every frame within loop (ie paint spray)
#define WEAPONTYPE_TWIN_PISTOLS     (0x000800)  // can use 2x guns at same time

// these are gun anim options
#define WEAPONTYPE_ANIM_RELOAD      (0x001000)  // weapon has reload anims
#define WEAPONTYPE_ANIM_CROUCHFIRE  (0x002000)  // weapon has crouching anims
#define WEAPONTYPE_RELOAD2LOOPSTART (0x004000)  // loop from end of reload to fire loop start
#define WEAPONTYPE_LONG_RELOAD_TIME (0x008000)  // force a longer reload time!

// these are area effect/shot options
#define WEAPONTYPE_SLOWS_DOWN       (0x010000)  //
#define WEAPONTYPE_RANDOM_SPEED     (0x020000)  //
#define WEAPONTYPE_FORCE_FINISH_ANIM (0x040000)  // force the anim to finish player after aim/fire rather than blending out
#define WEAPONTYPE_EXPANDS          (0x080000)  //

enum eRadarSprite
{
    RADAR_SPRITE_NONE = 0,
    RADAR_SPRITE_BORDER,
    RADAR_SPRITE_CENTRE,
    RADAR_SPRITE_MAP_HERE,
    RADAR_SPRITE_NORTH,

    RADAR_SPRITE_AIRYARD,
    RADAR_SPRITE_GUN,
    RADAR_SPRITE_BARBERS,
    RADAR_SPRITE_BIG_SMOKE,
    RADAR_SPRITE_BOATYARD,
    RADAR_SPRITE_BURGERSHOT,
    RADAR_SPRITE_BULLDOZER,
    RADAR_SPRITE_CAT_PINK,
    RADAR_SPRITE_CESAR,
    RADAR_SPRITE_CHICKEN,
    RADAR_SPRITE_CJ,
    RADAR_SPRITE_CRASH1,
    RADAR_SPRITE_DINER,
    RADAR_SPRITE_EMMETGUN,
    RADAR_SPRITE_ENEMYATTACK,
    RADAR_SPRITE_FIRE,
    RADAR_SPRITE_GIRLFRIEND,
    RADAR_SPRITE_HOSPITAL,
    RADAR_SPRITE_LOCO,
    RADAR_SPRITE_MADDOG,
    RADAR_SPRITE_MAFIA,
    RADAR_SPRITE_MCSTRAP,
    RADAR_SPRITE_MOD_GARAGE,
    RADAR_SPRITE_OGLOC,
    RADAR_SPRITE_PIZZA,
    RADAR_SPRITE_POLICE,
    RADAR_SPRITE_PROPERTY_GREEN,
    RADAR_SPRITE_PROPERTY_RED,
    RADAR_SPRITE_RACE,
    RADAR_SPRITE_RYDER,
    RADAR_SPRITE_SAVEHOUSE,
    RADAR_SPRITE_SCHOOL,
    RADAR_SPRITE_MYSTERY,
    RADAR_SPRITE_SWEET,
    RADAR_SPRITE_TATTOO,
    RADAR_SPRITE_TRUTH,
    RADAR_SPRITE_WAYPOINT,
    RADAR_SPRITE_TORENO_RANCH,
    RADAR_SPRITE_TRIADS,
    RADAR_SPRITE_TRIADS_CASINO,
    RADAR_SPRITE_TSHIRT,
    RADAR_SPRITE_WOOZIE,
    RADAR_SPRITE_ZERO,
    RADAR_SPRITE_DATE_DISCO,
    RADAR_SPRITE_DATE_DRINK,
    RADAR_SPRITE_DATE_FOOD,
    RADAR_SPRITE_TRUCK,
    RADAR_SPRITE_CASH,
    RADAR_SPRITE_FLAG,
    RADAR_SPRITE_GYM,
    RADAR_SPRITE_IMPOUND,
    RADAR_SPRITE_RUNWAY_LIGHT,
    RADAR_SPRITE_RUNWAY,
    RADAR_SPRITE_GANG_B,
    RADAR_SPRITE_GANG_P,
    RADAR_SPRITE_GANG_Y,
    RADAR_SPRITE_GANG_N,
    RADAR_SPRITE_GANG_G,
    RADAR_SPRITE_SPRAY
};

enum eWantedLevelSA
{
    WANTED_CLEAN = 0,
    WANTED_LEVEL1,
    WANTED_LEVEL2,
    WANTED_LEVEL3,
    WANTED_LEVEL4,
    WANTED_LEVEL5,
    WANTED_LEVEL6
};

#define WEAPONTYPE_CHAINGUN WEAPONTYPE_MINIGUN

enum eDoorState
{
    DOOR_NOTHING,
    DOOR_HIT_MAX_END,
    DOOR_HIT_MIN_END,
    DOOR_POP_OPEN,
    DOOR_SLAM_SHUT
};

enum eSystemState
{
    GS_START_UP,
    GS_INIT_LOGO_MPEG,
    GS_LOGO_MPEG,
    GS_INIT_INTRO_MPEG,
    GS_INTRO_MPEG,
    GS_INIT_ONCE,
    GS_INIT_FRONTEND,
    GS_FRONTEND,
    GS_INIT_PLAYING_GAME,
    GS_PLAYING_GAME
};

/**
 * Used to store the state of controls
 */
typedef struct eControlStatesSA
{
    DWORD dwFrontPad;
    WORD  wKeys1[19];
    DWORD dwFrontPad2;
    WORD  wKeys2[19];
    WORD  wTurnLeftRightAnalog[10];
    BYTE  bytePadding1[138];
    BYTE  byteCrouchAnalog[5];
    BYTE  byteIncrementer;
    BYTE  bytePadding2[15];
    DWORD dwKeyHeld;
} eControlStatesSA;

enum class VehicleClass : uint8_t
{
    AUTOMOBILE,
    MONSTER_TRUCK,
    QUAD,
    HELI,
    PLANE,
    BOAT,
    TRAIN,
    FAKE_HELI,
    FAKE_PLANE,
    BIKE,
    BMX,
    TRAILER,
};

enum eVehicleTypes
{
    VT_LANDSTAL = 400,
    VT_BRAVURA,
    VT_BUFFALO,
    VT_LINERUN,
    VT_PEREN,
    VT_SENTINEL,
    VT_DUMPER,
    VT_FIRETRUK,
    VT_TRASH,
    VT_STRETCH,
    VT_MANANA,
    VT_INFERNUS,
    VT_VOODOO,
    VT_PONY,
    VT_MULE,
    VT_CHEETAH,
    VT_AMBULAN,
    VT_LEVIATHN,
    VT_MOONBEAM,
    VT_ESPERANT,
    VT_TAXI,
    VT_WASHING,
    VT_BOBCAT,
    VT_MRWHOOP,
    VT_BFINJECT,
    VT_HUNTER,
    VT_PREMIER,
    VT_ENFORCER,
    VT_SECURICA,
    VT_BANSHEE,
    VT_PREDATOR,
    VT_BUS,
    VT_RHINO,
    VT_BARRACKS,
    VT_HOTKNIFE,
    VT_ARTICT1,
    VT_PREVION,
    VT_COACH,
    VT_CABBIE,
    VT_STALLION,
    VT_RUMPO,
    VT_RCBANDIT,
    VT_ROMERO,
    VT_PACKER,
    VT_MONSTER,
    VT_ADMIRAL,
    VT_SQUALO,
    VT_SEASPAR,
    VT_PIZZABOY,
    VT_TRAM,
    VT_ARTICT2,
    VT_TURISMO,
    VT_SPEEDER,
    VT_REEFER,
    VT_TROPIC,
    VT_FLATBED,
    VT_YANKEE,
    VT_CADDY,
    VT_SOLAIR,
    VT_TOPFUN,
    VT_SKIMMER,
    VT_PCJ600,
    VT_FAGGIO,
    VT_FREEWAY,
    VT_RCBARON,
    VT_RCRAIDER,
    VT_GLENDALE,
    VT_OCEANIC,
    VT_SANCHEZ,
    VT_SPARROW,
    VT_PATRIOT,
    VT_QUAD,
    VT_COASTG,
    VT_DINGHY,
    VT_HERMES,
    VT_SABRE,
    VT_RUSTLER,
    VT_ZR350,
    VT_WALTON,
    VT_REGINA,
    VT_COMET,
    VT_BMX,
    VT_BURRITO,
    VT_CAMPER,
    VT_MARQUIS,
    VT_BAGGAGE,
    VT_DOZER,
    VT_MAVERICK,
    VT_VCNMAV,
    VT_RANCHER,
    VT_FBIRANCH,
    VT_VIRGO,
    VT_GREENWOO,
    VT_JETMAX,
    VT_HOTRING,
    VT_SANDKING,
    VT_BLISTAC,
    VT_POLMAV,
    VT_BOXVILLE,
    VT_BENSON,
    VT_MESA,
    VT_RCGOBLIN,
    VT_HOTRINA,
    VT_HOTRINB,
    VT_BLOODRA,
    VT_RNCHLURE,
    VT_SUPERGT,
    VT_ELEGANT,
    VT_JOURNEY,
    VT_BIKE,
    VT_MTBIKE,
    VT_BEAGLE,
    VT_CROPDUST,
    VT_STUNT,
    VT_PETRO,
    VT_RDTRAIN,
    VT_NEBULA,
    VT_MAJESTIC,
    VT_BUCCANEE,
    VT_SHAMAL,
    VT_HYDRA,
    VT_FCR900,
    VT_NRG500,
    VT_COPBIKE,
    VT_CEMENT,
    VT_TOWTRUCK,
    VT_FORTUNE,
    VT_CADRONA,
    VT_FBITRUCK,
    VT_WILLARD,
    VT_FORKLIFT,
    VT_TRACTOR,
    VT_COMBINE,
    VT_FELTZER,
    VT_REMINGTN,
    VT_SLAMVAN,
    VT_BLADE,
    VT_FREIGHT,
    VT_STREAK,
    VT_VORTEX,
    VT_VINCENT,
    VT_BULLET,
    VT_CLOVER,
    VT_SADLER,
    VT_FIRELA,
    VT_HUSTLER,
    VT_INTRUDER,
    VT_PRIMO,
    VT_CARGOBOB,
    VT_TAMPA,
    VT_SUNRISE,
    VT_MERIT,
    VT_UTILITY,
    VT_NEVADA,
    VT_YOSEMITE,
    VT_WINDSOR,
    VT_MONSTERA,
    VT_MONSTERB,
    VT_URANUS,
    VT_JESTER,
    VT_SULTAN,
    VT_STRATUM,
    VT_ELEGY,
    VT_RAINDANC,
    VT_RCTIGER,
    VT_FLASH,
    VT_TAHOMA,
    VT_SAVANNA,
    VT_BANDITO,
    VT_FREIFLAT,
    VT_STREAKC,
    VT_KART,
    VT_MOWER,
    VT_DUNERIDE,
    VT_SWEEPER,
    VT_BROADWAY,
    VT_TORNADO,
    VT_AT400,
    VT_DFT30,
    VT_HUNTLEY,
    VT_STAFFORD,
    VT_BF400,
    VT_NEWSVAN,
    VT_TUG,
    VT_PETROTR,
    VT_EMPEROR,
    VT_WAYFARER,
    VT_EUROS,
    VT_HOTDOG,
    VT_CLUB,
    VT_FREIBOX,
    VT_ARTICT3,
    VT_ANDROM,
    VT_DODO,
    VT_RCCAM,
    VT_LAUNCH,
    VT_COPCARLA,
    VT_COPCARSF,
    VT_COPCARVG,
    VT_COPCARRU,
    VT_PICADOR,
    VT_SWATVAN,
    VT_ALPHA,
    VT_PHOENIX,
    VT_GLENSHIT,
    VT_SADLSHIT,
    VT_BAGBOXA,
    VT_BAGBOXB,
    VT_TUGSTAIR,
    VT_BOXBURG,
    VT_FARMTR1,
    VT_UTILTR1,
    VT_ID6283 = 6283,
    VT_ID6284,
    VT_ID6285,
    VT_ID6286,
    VT_ID6287,
    VT_ID6288,
    VT_ID6289,
    VT_ID6290,
    VT_ID6291,
    VT_ID6292,
    VT_ID6293,
    VT_ID6294,
    VT_ID6295,
    VT_ID6296,
    VT_ID6297,
    VT_ID6298,
    VT_ID6299,
    VT_ID6300,
    VT_ID6301,
    VT_ID6302,
    VT_ID6303,
    VT_ID6304,
    VT_ID6305,
    VT_ID6306,
    VT_ID6307,
    VT_ID6308,
    VT_ID6309,
    VT_ID6310,
    VT_ID6311,
    VT_ID6312,
    VT_ID6313,
    VT_ID6314,
    VT_ID6315,
    VT_ID6316,
    VT_ID6317,
    VT_ID6318,
    VT_ID6319,
    VT_ID6320,
    VT_ID6321,
    VT_ID6322,
    VT_ID6323,
    VT_ID6324,
    VT_ID6325,
    VT_ID6326,
    VT_ID6327,
    VT_ID6328,
    VT_ID6329,
    VT_ID6330,
    VT_ID6331,
    VT_ID6332,
    VT_ID6333,
    VT_ID6334,
    VT_ID6335,
    VT_ID6336,
    VT_ID6337,
    VT_ID6338,
    VT_ID6339,
    VT_ID6340,
    VT_ID6341,
    VT_ID6342,
    VT_ID6343,
    VT_ID6344,
    VT_ID6345,
    VT_ID6346,
    VT_ID6347,
    VT_ID6348,
    VT_ID6349,
    VT_ID6350,
    VT_ID6351,
    VT_ID6352,
    VT_ID6353,
    VT_ID6354,
    VT_ID6355,
    VT_ID6356,
    VT_ID6357,
    VT_ID6358,
    VT_ID6359,
    VT_ID6360,
    VT_ID6361,
    VT_ID6362,
    VT_ID6363,
    VT_ID6364,
    VT_ID6365,
    VT_ID6366,
    VT_ID6367,
    VT_ID6368,
    VT_ID6369,
    VT_ID6370,
    VT_ID6371,
    VT_ID6372,
    VT_ID6373,
    VT_ID6374,
    VT_ID6375,
    VT_ID6376,
    VT_ID6377,
    VT_ID6378,
    VT_ID6379,
    VT_ID6380,
    VT_ID6381,
    VT_ID6382,
    VT_ID6383,
    VT_ID6384,
    VT_ID6385,
    VT_ID6386,
    VT_ID6387,
    VT_ID6388,
    VT_ID6389,
    VT_ID6390,
    VT_ID6391,
    VT_ID6392,
    VT_ID6393,
    VT_ID6394,
    VT_ID6395,
    VT_ID6396,
    VT_ID6397,
    VT_ID6398,
    VT_ID6399,
    VT_ID6400,
    VT_ID6401,
    VT_ID6402,
    VT_ID6403,
    VT_ID6404,
    VT_ID6405,
    VT_ID6406,
    VT_ID6407,
    VT_ID6408,
    VT_ID6409,
    VT_ID6410,
    VT_ID6411,
    VT_ID6412,
    VT_ID6413,
    VT_ID6414,
    VT_ID6415,
    VT_ID6416,
    VT_ID6417,
    VT_ID6418,
    VT_ID6419,
    VT_ID6420,
    VT_ID6421,
    VT_ID6422,
    VT_ID6423,
    VT_ID6424,
    VT_ID6425,
    VT_ID6426,
    VT_ID6427,
    VT_ID6428,
    VT_ID6429,
    VT_ID6430,
    VT_ID6431,
    VT_ID6432,
    VT_ID6433,
    VT_ID6434,
    VT_ID6435,
    VT_ID6436,
    VT_ID6437,
    VT_ID6438,
    VT_ID6439,
    VT_ID6440,
    VT_ID6441,
    VT_ID6442,
    VT_ID6443,
    VT_ID6444,
    VT_ID6445,
    VT_ID6446,
    VT_ID6447,
    VT_ID6448,
    VT_ID6449,
    VT_ID6450,
    VT_ID6451,
    VT_ID6452,
    VT_ID6453,
    VT_ID6454,
    VT_ID6455,
    VT_ID6456,
    VT_ID6457,
    VT_ID6458,
    VT_ID6459,
    VT_ID6460,
    VT_ID6461,
    VT_ID6462,
    VT_ID6463,
    VT_ID6464,
    VT_ID6465,
    VT_ID6466,
    VT_ID6467,
    VT_ID6468,
    VT_ID6469,
    VT_ID6470,
    VT_ID6471,
    VT_ID6472,
    VT_ID6473,
    VT_ID6474,
    VT_ID6475,
    VT_ID6476,
    VT_ID6477,
    VT_ID6478,
    VT_ID6479,
    VT_ID6480,
    VT_ID6481,
    VT_ID6482,
    VT_ID6483,
    VT_ID6484,
    VT_ID6485,
    VT_ID6486,
    VT_ID6487,
    VT_ID6488,
    VT_ID6489,
    VT_ID6490,
    VT_ID6491,
    VT_ID6492,
    VT_ID6493,
    VT_ID6494,
    VT_ID6495,
    VT_ID6496,
    VT_ID6497,
    VT_ID6498,
    VT_ID6499,
    VT_ID6500,
    VT_ID6501,
    VT_ID6502,
    VT_ID6503,
    VT_ID6504,
    VT_ID6505,
    VT_ID6506,
    VT_ID6507,
    VT_ID6508,
    VT_ID6509,
    VT_ID6510,
    VT_ID6511,
    VT_ID6512,
    VT_ID6513,
    VT_ID6514,
    VT_ID6515,
    VT_ID6516,
    VT_ID6517,
    VT_ID6518,
    VT_ID6519,
    VT_ID6520,
    VT_ID6521,
    VT_ID6522,
    VT_ID6523,
    VT_ID6524,
    VT_ID6525,
    VT_BUGATI = 6526,
    VT_CADILAC,
    VT_BMV525,
    VT_MERSGT,
    VT_BMVX5,
    VT_BENTLB,
    VT_BUMER,
    VT_BMVM5,
    VT_LANCER9,
    VT_GL2019,
    VT_HUMER,
    VT_MERS63,
    VT_TESLA,
    VT_MSCLASS,
    VT_AUDIRS5,
    VT_MCLSLR,
    VT_AUDITT,
    VT_FTYPE,
    VT_GFXF,
    VT_GLECUP,
    VT_BMVM2,
    VT_MAZDA6,
    VT_KIASTI,
    VT_LEXUSIS,
    VT_ZAZIK,
    VT_MERSHEL,
    VT_KORCH02,
    VT_BMVHELO,
    VT_MERSA45,
    VT_VOLXC90,
    VT_SHNIVA,
    VT_FFIESTA,
    VT_RANGESVR,
    VT_SKRAPID,
    VT_FFALCON,
    VT_BMWE70,
    VT_CRUISER1,
    VT_GCHEROKEE,
    VT_LVESTA,
    VT_MBW221,
    VT_VAZZ99,
    VT_KIBERT,
    VT_ASTDB5,
    VT_CULLINAN,
    VT_HONS2K,
    VT_MARK290,
    VT_MAZRX8,
    VT_NISS24,
    VT_NIS350Z,
    VT_OCTAVIA,
    VT_POBEDA,
    VT_SILV15,
    VT_MOSCVI4,
    VT_FERCALIF,
    VT_AUDIA7,
    VT_HUAYRA,
    VT_VIPER10,
    VT_BMWE46,
    VT_GAZT34,
    VT_PHANTOM,
    VT_PAJERO,
    VT_MKUPER,
    VT_NFORDGT,
    VT_MERSW210,
    VT_CVTAHOE,
    VT_UAZBITVA,
    VT_AUDIQ7,
    VT_LINCOLN,
    VT_TCHASER,
    VT_BMWX6M,
    VT_CHAYKA,
    VT_VAZ2112,
    VT_MERSSKA,
    VT_PEGO406,
    VT_FERLAFER,
    VT_INFINITYG,
    VT_LAMBAS,
    VT_VWGOLF2,
    VT_SUBARIK,
    VT_ZILZIL,
    VT_M300SL,
    VT_VZ2115,
    VT_CADCTS,
    VT_CCIVIC,
    VT_MEGANE,
    VT_JAGIPACE,
    VT_BUGATICH,
    VT_MAYBACH,
    VT_MUSORV,
    VT_BENTLEYT,
    VT_FORMUST,
    VT_NSENTRA,
    VT_SUBBRZ,
    VT_MCLARENS,
    VT_MERSW212,
    VT_LEXLFA,
    VT_HSVGTS,
    VT_BUMER39,
    VT_TOUAREG,
    VT_VWSCIR,
    VT_FERARIF4,
    VT_MASERATI,
    VT_AUDRS4,
    VT_MERSLK,
    VT_INFIQ50,
    VT_MACL65S,
    VT_DODGECH,
    VT_BUMER39D,
    VT_COUNTACH,
    VT_BMWE92,
    VT_DANIL39,
    VT_BRONEVIK,
    VT_TESLAMX,
    VT_SUPRA90,
    VT_BENZSSK,
    VT_DIABLOSV,
    VT_MAZDA3M,
    VT_BENZ190E,
    VT_BMW7NEW,
    VT_BMWM4C,
    VT_BBOLIDE,
    VT_CHRYSLER3,
    VT_CAMRYXS,
    VT_S63AMG,
    VT_TUATARA,
    VT_VENENO,
    VT_BETMOBIL,
    VT_ATLANTIC,
    VT_AUDIRS6,
    VT_BACALAR,
    VT_ZILHOTROD,
    VT_TAYCAN,
    VT_ASMVICTOR,
    VT_BMW1MSW,
    VT_GIULIA,
    VT_NVISION,
    VT_FERRI36,
    VT_TUNDRATRD,
    VT_ARTEON,
    VT_BMWM5CS,
    VT_SHELBY4C,
    VT_BMWIX21,
    VT_SCANIAF,
    VT_SCANIAC,
    VT_RDTRAIN2,
    VT_FLATBED2,
    VT_FEROMA,
    VT_AMGONE,
    VT_VOITURE,
    VT_BMWHOME,
    VT_FER812,
    VT_DEFENDER,
    VT_S1HOON,
    VT_BMWG80,
    VT_BMW850,
    VT_NISSANZ,
    VT_KIARIO21,
    VT_MERSEQG,
    VT_ACURANSX,
    VT_LAMTERZO,
    VT_KKIAK5,
    VT_VCLASS,
    VT_AMGVGT,
    VT_ACLASS200,
    VT_MATIZ,
    VT_PINBER,
    VT_RAV421,
    VT_NEXIA,
    VT_MERSV6,
    VT_BVGSV,
    VT_VULCANO,
    VT_LIMO140,
    VT_MISTRAL,
    VT_FLATBED3,
    VT_CATOC,
    VT_SF15,
    VT_HDPA,
    VT_BUSCUSTOM,
    VT_F599XX,
    VT_ID17306 = 17306,
    VT_ID17307,
    VT_ID17308,
    VT_ID17309,
    VT_ID17310,
    VT_ID17311,
    VT_ID17312,
    VT_ID17313,
    VT_ID17314,
    VT_ID17315,
    VT_ID17316,
    VT_ID17317,
    VT_ID17318,
    VT_ID17319,
    VT_ID17320,
    VT_ID17321,
    VT_ID17322,
    VT_ID17323,
    VT_ID17324,
    VT_ID17325,
    VT_ID17326,
    VT_ID17327,
    VT_ID17328,
    VT_ID17329,
    VT_ID17330,
    VT_ID17331,
    VT_ID17332,
    VT_ID17333,
    VT_ID17334,
    VT_ID17335,
    VT_ID17336,
    VT_ID17337,
    VT_ID17338,
    VT_ID17339,
    VT_ID17340,
    VT_ID17341,
    VT_ID17342,
    VT_ID17343,
    VT_ID17344,
    VT_ID17345,
    VT_ID17346,
    VT_ID17347,
    VT_ID17348,
    VT_ID17349,
    VT_ID17350,
    VT_ID17351,
    VT_ID17352,
    VT_ID17353,
    VT_ID17354,
    VT_ID17355,
    VT_ID17356,
    VT_ID17357,
    VT_ID17358,
    VT_ID17359,
    VT_ID17360,
    VT_ID17361,
    VT_ID17362,
    VT_ID17363,
    VT_ID17364,
    VT_ID17365,
    VT_ID17366,
    VT_ID17367,
    VT_ID17368,
    VT_ID17369,
    VT_ID17370,
    VT_ID17371,
    VT_ID17372,
    VT_ID17373,
    VT_ID17374,
    VT_ID17375,
    VT_ID17376,
    VT_ID17377,
    VT_ID17378,
    VT_ID17379,
    VT_ID17380,
    VT_ID17381,
    VT_ID17382,
    VT_ID17383,
    VT_ID17384,
    VT_ID17385,
    VT_ID17386,
    VT_ID17387,
    VT_ID17388,
    VT_ID17389,
    VT_ID17390,
    VT_ID17391,
    VT_ID17392,
    VT_ID17393,
    VT_ID17394,
    VT_ID17395,
    VT_ID17396,
    VT_ID17397,
    VT_ID17398,
    VT_ID17399,
    VT_ID17400,
    VT_ID17401,
    VT_ID17402,
    VT_ID17403,
    VT_ID17404,
    VT_ID17405,
    VT_ID17406,
    VT_ID17407,
    VT_ID17408,
    VT_ID17409,
    VT_ID17410,
    VT_ID17411,
    VT_ID17412,
    VT_ID17413,
    VT_ID17414,
    VT_ID17415,
    VT_ID17416,
    VT_ID17417,
    VT_ID17418,
    VT_ID17419,
    VT_ID17420,
    VT_ID17421,
    VT_ID17422,
    VT_ID17423,
    VT_ID17424,
    VT_ID17425,
    VT_ID17426,
    VT_ID17427,
    VT_ID17428,
    VT_ID17429,
    VT_ID17430,
    VT_ID17431,
    VT_ID17432,
    VT_ID17433,
    VT_ID17434,
    VT_ID17435,
    VT_ID17436,
    VT_ID17437,
    VT_ID17438,
    VT_ID17439,
    VT_ID17440,
    VT_ID17441,
    VT_ID17442,
    VT_ID17443,
    VT_ID17444,
    VT_ID17445,
    VT_ID17446,
    VT_ID17447,
    VT_ID17448,
    VT_ID17449,
    VT_ID17450,
    VT_ID17451,
    VT_ID17452,
    VT_ID17453,
    VT_ID17454,
    VT_ID17455,
    VT_ID17456,
    VT_ID17457,
    VT_ID17458,
    VT_ID17459,
    VT_ID17460,
    VT_ID17461,
    VT_ID17462,
    VT_ID17463,
    VT_ID17464,
    VT_ID17465,
    VT_ID17466,
    VT_ID17467,
    VT_ID17468,
    VT_ID17469,
    VT_ID17470,
    VT_ID17471,
    VT_ID17472,
    VT_ID17473,
    VT_ID17474,
    VT_ID17475,
    VT_ID17476,
    VT_ID17477,
    VT_ID17478,
    VT_ID17479,
    VT_ID17480,
    VT_ID17481,
    VT_ID17482,
    VT_ID17483,
    VT_ID17484,
    VT_ID17485,
    VT_ID17486,
    VT_ID17487,
    VT_ID17488,
    VT_ID17489,
    VT_ID17490,
    VT_ID17491,
    VT_ID17492,
    VT_ID17493,
    VT_ID17494,
    VT_ID17495,
    VT_ID17496,
    VT_ID17497,
    VT_ID17498,
    VT_ID17499,
    VT_ID17500,
    VT_ID17501,
    VT_ID17502,
    VT_ID17503,
    VT_ID17504,
    VT_ID17505,
    VT_ID17506,
    VT_ID17507,
    VT_ID17508,
    VT_ID17509,
    VT_ID17510,
    VT_ID17511,
    VT_ID17512,
    VT_ID17513,
    VT_ID17514,
    VT_ID17515,
    VT_ID17516,
    VT_ID17517,
    VT_ID17518,
    VT_ID17519,
    VT_ID17520,
    VT_ID17521,
    VT_ID17522,
    VT_ID17523,
    VT_ID17524,
    VT_ID17525,
    VT_ID17526,
    VT_ID17527,
    VT_ID17528,
    VT_ID17529,
    VT_ID17530,
    VT_ID17531,
    VT_ID17532,
    VT_ID17533,
    VT_ID17534,
    VT_ID17535,
    VT_ID17536,
    VT_ID17537,
    VT_ID17538,
    VT_ID17539,
    VT_ID17540,
    VT_ID17541,
    VT_ID17542,
    VT_ID17543,
    VT_ID17544,
    VT_ID17545,
    VT_ID17546,
    VT_ID17547,
    VT_ID17548,
    VT_ID17549,
    VT_ID17550,
    VT_ID17551,
    VT_ID17552,
    VT_ID17553,
    VT_ID17554,
    VT_ID17555,
    VT_ID17556,
    VT_ID17557,
    VT_ID17558,
    VT_ID17559,
    VT_ID17560,
    VT_ID17561,
    VT_ID17562,
    VT_ID17563,
    VT_ID17564,
    VT_ID17565,
    VT_ID17566,
    VT_ID17567,
    VT_ID17568,
    VT_ID17569,
    VT_ID17570,
    VT_ID17571,
    VT_ID17572,
    VT_ID17573,
    VT_ID17574,
    VT_ID17575,
    VT_ID17576,
    VT_ID17577,
    VT_ID17578,
    VT_ID17579,
    VT_ID17580,
    VT_ID17581,
    VT_ID17582,
    VT_ID17583,
    VT_ID17584,
    VT_ID17585,
    VT_ID17586,
    VT_ID17587,
    VT_ID17588,
    VT_ID17589,
    VT_ID17590,
    VT_ID17591,
    VT_ID17592,
    VT_ID17593,
    VT_ID17594,
    VT_ID17595,
    VT_ID17596,
    VT_ID17597,
    VT_ID17598,
    VT_ID17599,
    VT_ID17600,
    VT_ID17601,
    VT_ID17602,
    VT_ID17603,
    VT_ID17604,
    VT_ID17605,
    VT_ID17606,
    VT_ID17607,
    VT_ID17608,
    VT_ID17609,
    VT_ID17610,
    VT_ID17611,
    VT_ID17612,
    VT_ID17613,
    VT_ID17614,
    VT_ID17615,
    VT_ID17616,
    VT_ID17617,
    VT_ID17618,
    VT_ID17619,
    VT_ID17620,
    VT_ID17621,
    VT_ID17622,
    VT_ID17623,
    VT_ID17624,
    VT_ID17625,
    VT_ID17626,
    VT_ID17627,
    VT_ID17628,
    VT_MAX
};

enum eHandlingTypes
{
    HT_LANDSTAL,
    HT_BRAVURA,
    HT_BUFFALO,
    HT_LINERUN,
    HT_PEREN,
    HT_SENTINEL,
    HT_DUMPER,
    HT_FIRETRUK,
    HT_TRASH,
    HT_STRETCH,
    HT_MANANA,
    HT_INFERNUS,
    HT_VOODOO,
    HT_PONY,
    HT_MULE,
    HT_CHEETAH,
    HT_AMBULAN,
    HT_MOONBEAM,
    HT_ESPERANT,
    HT_TAXI,
    HT_WASHING,
    HT_BOBCAT,
    HT_MRWHOOP,
    HT_BFINJECT,
    HT_PREMIER,
    HT_ENFORCER,
    HT_SECURICA,
    HT_BANSHEE,
    HT_BUS,
    HT_RHINO,
    HT_BARRACKS,
    HT_HOTKNIFE,
    HT_ARTICT1,
    HT_PREVION,
    HT_COACH,
    HT_CABBIE,
    HT_STALLION,
    HT_RUMPO,
    HT_RCBANDIT,
    HT_ROMERO,
    HT_PACKER,
    HT_MONSTER,
    HT_ADMIRAL,
    HT_TRAM,
    HT_AIRTRAIN,
    HT_ARTICT2,
    HT_TURISMO,
    HT_FLATBED,
    HT_YANKEE,
    HT_GOLFCART,
    HT_SOLAIR,
    HT_TOPFUN,
    HT_GLENDALE,
    HT_OCEANIC,
    HT_PATRIOT,
    HT_HERMES,
    HT_SABRE,
    HT_ZR350,
    HT_WALTON,
    HT_REGINA,
    HT_COMET,
    HT_BURRITO,
    HT_CAMPER,
    HT_BAGGAGE,
    HT_DOZER,
    HT_RANCHER,
    HT_FBIRANCH,
    HT_VIRGO,
    HT_GREENWOO,
    HT_HOTRING,
    HT_SANDKING,
    HT_BLISTAC,
    HT_BOXVILLE,
    HT_BENSON,
    HT_MESA,
    HT_BLOODRA,
    HT_BLOODRB,
    HT_SUPERGT,
    HT_ELEGANT,
    HT_JOURNEY,
    HT_PETROL,
    HT_RDTRAIN,
    HT_NEBULA,
    HT_MAJESTIC,
    HT_BUCCANEE,
    HT_CEMENT,
    HT_TOWTRUCK,
    HT_FORTUNE,
    HT_CADRONA,
    HT_FBITRUCK,
    HT_WILLARD,
    HT_FORKLIFT,
    HT_TRACTOR,
    HT_COMBINE,
    HT_FELTZER,
    HT_REMINGTN,
    HT_SLAMVAN,
    HT_BLADE,
    HT_FREIGHT,
    HT_STREAK,
    HT_VINCENT,
    HT_BULLET,
    HT_CLOVER,
    HT_SADLER,
    HT_RANGER,
    HT_HUSTLER,
    HT_INTRUDER,
    HT_PRIMO,
    HT_TAMPA,
    HT_SUNRISE,
    HT_MERIT,
    HT_UTILITY,
    HT_YOSEMITE,
    HT_WINDSOR,
    HT_MTRUCK_A,
    HT_MTRUCK_B,
    HT_URANUS,
    HT_JESTER,
    HT_SULTAN,
    HT_STRATUM,
    HT_ELEGY,
    HT_RCTIGER,
    HT_FLASH,
    HT_TAHOMA,
    HT_SAVANNA,
    HT_BANDITO,
    HT_FREIFLAT,
    HT_CSTREAK,
    HT_KART,
    HT_MOWER,
    HT_DUNE,
    HT_SWEEPER,
    HT_BROADWAY,
    HT_TORNADO,
    HT_DFT30,
    HT_HUNTLEY,
    HT_STAFFORD,
    HT_NEWSVAN,
    HT_TUG,
    HT_PETROTR,
    HT_EMPEROR,
    HT_FLOAT,
    HT_EUROS,
    HT_HOTDOG,
    HT_CLUB,
    HT_ARTICT3,
    HT_RCCAM,
    HT_POLICE_LA,
    HT_POLICE_SF,
    HT_POLICE_VG,
    HT_POLRANGER,
    HT_PICADOR,
    HT_SWATVAN,
    HT_ALPHA,
    HT_PHOENIX,
    HT_BAGBOXA,
    HT_BAGBOXB,
    HT_STAIRS,
    HT_BOXBURG,
    HT_FARM_TR1,
    HT_UTIL_TR1,
    HT_ROLLER,
    HT_BIKE,
    HT_PIZZABOY,
    HT_DIRTBIKE,
    HT_FCR900,
    HT_NRG500,
    HT_HPV1000,
    HT_BF400,
    HT_WAYFARER,
    HT_QUADBIKE,
    HT_BMX,
    HT_CHOPPERB,
    HT_MTB,
    HT_FREEWAY,
    HT_PREDATOR,
    HT_SPEEDER,
    HT_REEFER,
    HT_RIO,
    HT_SQUALO,
    HT_TROPIC,
    HT_COASTGRD,
    HT_DINGHY,
    HT_MARQUIS,
    HT_CUPBOAT,
    HT_LAUNCH,
    HT_SEAPLANE,
    HT_VORTEX,
    HT_RUSTLER,
    HT_BEAGLE,
    HT_CROPDUST,
    HT_STUNT,
    HT_SHAMAL,
    HT_HYDRA,
    HT_NEVADA,
    HT_AT400,
    HT_ANDROM,
    HT_DODO,
    HT_SPARROW,
    HT_SEASPAR,
    HT_MAVERICK,
    HT_COASTMAV,
    HT_POLMAV,
    HT_HUNTER,
    HT_LEVIATHN,
    HT_CARGOBOB,
    HT_RAINDANC,
    HT_RCBARON,
    HT_RCGOBLIN,
    HT_RCRAIDER,
    HT_HOTRINA,
    HT_HOTRINB,
    HT_SADLSHIT,
    HT_GLENSHIT,
    HT_FAGGIO,
    HT_FIRELA,
    HT_RNCHLURE,
    HT_FREIBOX,
    HT_ID6283,
    HT_ID6284,
    HT_ID6285,
    HT_ID6286,
    HT_ID6287,
    HT_ID6288,
    HT_ID6289,
    HT_ID6290,
    HT_ID6291,
    HT_ID6292,
    HT_ID6293,
    HT_ID6294,
    HT_ID6295,
    HT_ID6296,
    HT_ID6297,
    HT_ID6298,
    HT_ID6299,
    HT_ID6300,
    HT_ID6301,
    HT_ID6302,
    HT_ID6303,
    HT_ID6304,
    HT_ID6305,
    HT_ID6306,
    HT_ID6307,
    HT_ID6308,
    HT_ID6309,
    HT_ID6310,
    HT_ID6311,
    HT_ID6312,
    HT_ID6313,
    HT_ID6314,
    HT_ID6315,
    HT_ID6316,
    HT_ID6317,
    HT_ID6318,
    HT_ID6319,
    HT_ID6320,
    HT_ID6321,
    HT_ID6322,
    HT_ID6323,
    HT_ID6324,
    HT_ID6325,
    HT_ID6326,
    HT_ID6327,
    HT_ID6328,
    HT_ID6329,
    HT_ID6330,
    HT_ID6331,
    HT_ID6332,
    HT_ID6333,
    HT_ID6334,
    HT_ID6335,
    HT_ID6336,
    HT_ID6337,
    HT_ID6338,
    HT_ID6339,
    HT_ID6340,
    HT_ID6341,
    HT_ID6342,
    HT_ID6343,
    HT_ID6344,
    HT_ID6345,
    HT_ID6346,
    HT_ID6347,
    HT_ID6348,
    HT_ID6349,
    HT_ID6350,
    HT_ID6351,
    HT_ID6352,
    HT_ID6353,
    HT_ID6354,
    HT_ID6355,
    HT_ID6356,
    HT_ID6357,
    HT_ID6358,
    HT_ID6359,
    HT_ID6360,
    HT_ID6361,
    HT_ID6362,
    HT_ID6363,
    HT_ID6364,
    HT_ID6365,
    HT_ID6366,
    HT_ID6367,
    HT_ID6368,
    HT_ID6369,
    HT_ID6370,
    HT_ID6371,
    HT_ID6372,
    HT_ID6373,
    HT_ID6374,
    HT_ID6375,
    HT_ID6376,
    HT_ID6377,
    HT_ID6378,
    HT_ID6379,
    HT_ID6380,
    HT_ID6381,
    HT_ID6382,
    HT_ID6383,
    HT_ID6384,
    HT_ID6385,
    HT_ID6386,
    HT_ID6387,
    HT_ID6388,
    HT_ID6389,
    HT_ID6390,
    HT_ID6391,
    HT_ID6392,
    HT_ID6393,
    HT_ID6394,
    HT_ID6395,
    HT_ID6396,
    HT_ID6397,
    HT_ID6398,
    HT_ID6399,
    HT_ID6400,
    HT_ID6401,
    HT_ID6402,
    HT_ID6403,
    HT_ID6404,
    HT_ID6405,
    HT_ID6406,
    HT_ID6407,
    HT_ID6408,
    HT_ID6409,
    HT_ID6410,
    HT_ID6411,
    HT_ID6412,
    HT_ID6413,
    HT_ID6414,
    HT_ID6415,
    HT_ID6416,
    HT_ID6417,
    HT_ID6418,
    HT_ID6419,
    HT_ID6420,
    HT_ID6421,
    HT_ID6422,
    HT_ID6423,
    HT_ID6424,
    HT_ID6425,
    HT_ID6426,
    HT_ID6427,
    HT_ID6428,
    HT_ID6429,
    HT_ID6430,
    HT_ID6431,
    HT_ID6432,
    HT_ID6433,
    HT_ID6434,
    HT_ID6435,
    HT_ID6436,
    HT_ID6437,
    HT_ID6438,
    HT_ID6439,
    HT_ID6440,
    HT_ID6441,
    HT_ID6442,
    HT_ID6443,
    HT_ID6444,
    HT_ID6445,
    HT_ID6446,
    HT_ID6447,
    HT_ID6448,
    HT_ID6449,
    HT_ID6450,
    HT_ID6451,
    HT_ID6452,
    HT_ID6453,
    HT_ID6454,
    HT_ID6455,
    HT_ID6456,
    HT_ID6457,
    HT_ID6458,
    HT_ID6459,
    HT_ID6460,
    HT_ID6461,
    HT_ID6462,
    HT_ID6463,
    HT_ID6464,
    HT_ID6465,
    HT_ID6466,
    HT_ID6467,
    HT_ID6468,
    HT_ID6469,
    HT_ID6470,
    HT_ID6471,
    HT_ID6472,
    HT_ID6473,
    HT_ID6474,
    HT_ID6475,
    HT_ID6476,
    HT_ID6477,
    HT_ID6478,
    HT_ID6479,
    HT_ID6480,
    HT_ID6481,
    HT_ID6482,
    HT_ID6483,
    HT_ID6484,
    HT_ID6485,
    HT_ID6486,
    HT_ID6487,
    HT_ID6488,
    HT_ID6489,
    HT_ID6490,
    HT_ID6491,
    HT_ID6492,
    HT_ID6493,
    HT_ID6494,
    HT_ID6495,
    HT_ID6496,
    HT_ID6497,
    HT_ID6498,
    HT_ID6499,
    HT_ID6500,
    HT_ID6501,
    HT_ID6502,
    HT_ID6503,
    HT_ID6504,
    HT_ID6505,
    HT_ID6506,
    HT_ID6507,
    HT_ID6508,
    HT_ID6509,
    HT_ID6510,
    HT_ID6511,
    HT_ID6512,
    HT_ID6513,
    HT_ID6514,
    HT_ID6515,
    HT_ID6516,
    HT_ID6517,
    HT_ID6518,
    HT_ID6519,
    HT_ID6520,
    HT_ID6521,
    HT_ID6522,
    HT_ID6523,
    HT_ID6524,
    HT_ID6525,
    HT_BUGATI,
    HT_CADILAC,
    HT_BMV525,
    HT_MERSGT,
    HT_BMVX5,
    HT_BENTLB,
    HT_BUMER,
    HT_BMVM5,
    HT_LANCER9,
    HT_GL2019,
    HT_HUMER,
    HT_MERS63,
    HT_TESLA,
    HT_MSCLASS,
    HT_AUDIRS5,
    HT_MCLSLR,
    HT_AUDITT,
    HT_FTYPE,
    HT_GFXF,
    HT_GLECUP,
    HT_BMVM2,
    HT_MAZDA6,
    HT_KIASTI,
    HT_LEXUSIS,
    HT_ZAZIK,
    HT_MERSHEL,
    HT_KORCH02,
    HT_BMVHELO,
    HT_MERSA45,
    HT_VOLXC90,
    HT_SHNIVA,
    HT_FFIESTA,
    HT_RANGESVR,
    HT_SKRAPID,
    HT_FFALCON,
    HT_BMWE70,
    HT_CRUISER1,
    HT_GCHEROKEE,
    HT_LVESTA,
    HT_MBW221,
    HT_VAZZ99,
    HT_KIBERT,
    HT_ASTDB5,
    HT_CULLINAN,
    HT_HONS2K,
    HT_MARK290,
    HT_MAZRX8,
    HT_NISS24,
    HT_NIS350Z,
    HT_OCTAVIA,
    HT_POBEDA,
    HT_SILV15,
    HT_MOSCVI4,
    HT_FERCALIF,
    HT_AUDIA7,
    HT_HUAYRA,
    HT_VIPER10,
    HT_BMWE46,
    HT_GAZT34,
    HT_PHANTOM,
    HT_PAJERO,
    HT_MKUPER,
    HT_NFORDGT,
    HT_MERSW210,
    HT_CVTAHOE,
    HT_UAZBITVA,
    HT_AUDIQ7,
    HT_LINCOLN,
    HT_TCHASER,
    HT_BMWX6M,
    HT_CHAYKA,
    HT_VAZ2112,
    HT_MERSSKA,
    HT_PEGO406,
    HT_FERLAFER,
    HT_INFINITYG,
    HT_LAMBAS,
    HT_VWGOLF2,
    HT_SUBARIK,
    HT_ZILZIL,
    HT_M300SL,
    HT_VZ2115,
    HT_CADCTS,
    HT_CCIVIC,
    HT_MEGANE,
    HT_JAGIPACE,
    HT_BUGATICH,
    HT_MAYBACH,
    HT_MUSORV,
    HT_BENTLEYT,
    HT_FORMUST,
    HT_NSENTRA,
    HT_SUBBRZ,
    HT_MCLARENS,
    HT_MERSW212,
    HT_LEXLFA,
    HT_HSVGTS,
    HT_BUMER39,
    HT_TOUAREG,
    HT_VWSCIR,
    HT_FERARIF4,
    HT_MASERATI,
    HT_AUDRS4,
    HT_MERSLK,
    HT_INFIQ50,
    HT_MACL65S,
    HT_DODGECH,
    HT_BUMER39D,
    HT_COUNTACH,
    HT_BMWE92,
    HT_DANIL39,
    HT_BRONEVIK,
    HT_TESLAMX,
    HT_SUPRA90,
    HT_BENZSSK,
    HT_DIABLOSV,
    HT_MAZDA3M,
    HT_BENZ190E,
    HT_BMW7NEW,
    HT_BMWM4C,
    HT_BBOLIDE,
    HT_CHRYSLER3,
    HT_CAMRYXS,
    HT_S63AMG,
    HT_TUATARA,
    HT_VENENO,
    HT_BETMOBIL,
    HT_ATLANTIC,
    HT_AUDIRS6,
    HT_BACALAR,
    HT_ZILHOTROD,
    HT_TAYCAN,
    HT_ASMVICTOR,
    HT_BMW1MSW,
    HT_GIULIA,
    HT_NVISION,
    HT_FERRI36,
    HT_TUNDRATRD,
    HT_ARTEON,
    HT_BMWM5CS,
    HT_SHELBY4C,
    HT_BMWIX21,
    HT_SCANIAF,
    HT_SCANIAC,
    HT_RDTRAIN2,
    HT_FLATBED2,
    HT_FEROMA,
    HT_AMGONE,
    HT_VOITURE,
    HT_BMWHOME,
    HT_FER812,
    HT_DEFENDER,
    HT_S1HOON,
    HT_BMWG80,
    HT_BMW850,
    HT_NISSANZ,
    HT_KIARIO21,
    HT_MERSEQG,
    HT_ACURANSX,
    HT_LAMTERZO,
    HT_KKIAK5,
    HT_VCLASS,
    HT_AMGVGT,
    HT_ACLASS200,
    HT_MATIZ,
    HT_PINBER,
    HT_RAV421,
    HT_NEXIA,
    HT_MERSV6,
    HT_BVGSV,
    HT_VULCANO,
    HT_LIMO140,
    HT_MISTRAL,
    HT_FLATBED3,
    HT_CATOC,
    HT_SF15,
    HT_HDPA,
    HT_BUSCUSTOM,
    HT_F599XX,
    HT_ID17306,
    HT_ID17307,
    HT_ID17308,
    HT_ID17309,
    HT_ID17310,
    HT_ID17311,
    HT_ID17312,
    HT_ID17313,
    HT_ID17314,
    HT_ID17315,
    HT_ID17316,
    HT_ID17317,
    HT_ID17318,
    HT_ID17319,
    HT_ID17320,
    HT_ID17321,
    HT_ID17322,
    HT_ID17323,
    HT_ID17324,
    HT_ID17325,
    HT_ID17326,
    HT_ID17327,
    HT_ID17328,
    HT_ID17329,
    HT_ID17330,
    HT_ID17331,
    HT_ID17332,
    HT_ID17333,
    HT_ID17334,
    HT_ID17335,
    HT_ID17336,
    HT_ID17337,
    HT_ID17338,
    HT_ID17339,
    HT_ID17340,
    HT_ID17341,
    HT_ID17342,
    HT_ID17343,
    HT_ID17344,
    HT_ID17345,
    HT_ID17346,
    HT_ID17347,
    HT_ID17348,
    HT_ID17349,
    HT_ID17350,
    HT_ID17351,
    HT_ID17352,
    HT_ID17353,
    HT_ID17354,
    HT_ID17355,
    HT_ID17356,
    HT_ID17357,
    HT_ID17358,
    HT_ID17359,
    HT_ID17360,
    HT_ID17361,
    HT_ID17362,
    HT_ID17363,
    HT_ID17364,
    HT_ID17365,
    HT_ID17366,
    HT_ID17367,
    HT_ID17368,
    HT_ID17369,
    HT_ID17370,
    HT_ID17371,
    HT_ID17372,
    HT_ID17373,
    HT_ID17374,
    HT_ID17375,
    HT_ID17376,
    HT_ID17377,
    HT_ID17378,
    HT_ID17379,
    HT_ID17380,
    HT_ID17381,
    HT_ID17382,
    HT_ID17383,
    HT_ID17384,
    HT_ID17385,
    HT_ID17386,
    HT_ID17387,
    HT_ID17388,
    HT_ID17389,
    HT_ID17390,
    HT_ID17391,
    HT_ID17392,
    HT_ID17393,
    HT_ID17394,
    HT_ID17395,
    HT_ID17396,
    HT_ID17397,
    HT_ID17398,
    HT_ID17399,
    HT_ID17400,
    HT_ID17401,
    HT_ID17402,
    HT_ID17403,
    HT_ID17404,
    HT_ID17405,
    HT_ID17406,
    HT_ID17407,
    HT_ID17408,
    HT_ID17409,
    HT_ID17410,
    HT_ID17411,
    HT_ID17412,
    HT_ID17413,
    HT_ID17414,
    HT_ID17415,
    HT_ID17416,
    HT_ID17417,
    HT_ID17418,
    HT_ID17419,
    HT_ID17420,
    HT_ID17421,
    HT_ID17422,
    HT_ID17423,
    HT_ID17424,
    HT_ID17425,
    HT_ID17426,
    HT_ID17427,
    HT_ID17428,
    HT_ID17429,
    HT_ID17430,
    HT_ID17431,
    HT_ID17432,
    HT_ID17433,
    HT_ID17434,
    HT_ID17435,
    HT_ID17436,
    HT_ID17437,
    HT_ID17438,
    HT_ID17439,
    HT_ID17440,
    HT_ID17441,
    HT_ID17442,
    HT_ID17443,
    HT_ID17444,
    HT_ID17445,
    HT_ID17446,
    HT_ID17447,
    HT_ID17448,
    HT_ID17449,
    HT_ID17450,
    HT_ID17451,
    HT_ID17452,
    HT_ID17453,
    HT_ID17454,
    HT_ID17455,
    HT_ID17456,
    HT_ID17457,
    HT_ID17458,
    HT_ID17459,
    HT_ID17460,
    HT_ID17461,
    HT_ID17462,
    HT_ID17463,
    HT_ID17464,
    HT_ID17465,
    HT_ID17466,
    HT_ID17467,
    HT_ID17468,
    HT_ID17469,
    HT_ID17470,
    HT_ID17471,
    HT_ID17472,
    HT_ID17473,
    HT_ID17474,
    HT_ID17475,
    HT_ID17476,
    HT_ID17477,
    HT_ID17478,
    HT_ID17479,
    HT_ID17480,
    HT_ID17481,
    HT_ID17482,
    HT_ID17483,
    HT_ID17484,
    HT_ID17485,
    HT_ID17486,
    HT_ID17487,
    HT_ID17488,
    HT_ID17489,
    HT_ID17490,
    HT_ID17491,
    HT_ID17492,
    HT_ID17493,
    HT_ID17494,
    HT_ID17495,
    HT_ID17496,
    HT_ID17497,
    HT_ID17498,
    HT_ID17499,
    HT_ID17500,
    HT_ID17501,
    HT_ID17502,
    HT_ID17503,
    HT_ID17504,
    HT_ID17505,
    HT_ID17506,
    HT_ID17507,
    HT_ID17508,
    HT_ID17509,
    HT_ID17510,
    HT_ID17511,
    HT_ID17512,
    HT_ID17513,
    HT_ID17514,
    HT_ID17515,
    HT_ID17516,
    HT_ID17517,
    HT_ID17518,
    HT_ID17519,
    HT_ID17520,
    HT_ID17521,
    HT_ID17522,
    HT_ID17523,
    HT_ID17524,
    HT_ID17525,
    HT_ID17526,
    HT_ID17527,
    HT_ID17528,
    HT_ID17529,
    HT_ID17530,
    HT_ID17531,
    HT_ID17532,
    HT_ID17533,
    HT_ID17534,
    HT_ID17535,
    HT_ID17536,
    HT_ID17537,
    HT_ID17538,
    HT_ID17539,
    HT_ID17540,
    HT_ID17541,
    HT_ID17542,
    HT_ID17543,
    HT_ID17544,
    HT_ID17545,
    HT_ID17546,
    HT_ID17547,
    HT_ID17548,
    HT_ID17549,
    HT_ID17550,
    HT_ID17551,
    HT_ID17552,
    HT_ID17553,
    HT_ID17554,
    HT_ID17555,
    HT_ID17556,
    HT_ID17557,
    HT_ID17558,
    HT_ID17559,
    HT_ID17560,
    HT_ID17561,
    HT_ID17562,
    HT_ID17563,
    HT_ID17564,
    HT_ID17565,
    HT_ID17566,
    HT_ID17567,
    HT_ID17568,
    HT_ID17569,
    HT_ID17570,
    HT_ID17571,
    HT_ID17572,
    HT_ID17573,
    HT_ID17574,
    HT_ID17575,
    HT_ID17576,
    HT_ID17577,
    HT_ID17578,
    HT_ID17579,
    HT_ID17580,
    HT_ID17581,
    HT_ID17582,
    HT_ID17583,
    HT_ID17584,
    HT_ID17585,
    HT_ID17586,
    HT_ID17587,
    HT_ID17588,
    HT_ID17589,
    HT_ID17590,
    HT_ID17591,
    HT_ID17592,
    HT_ID17593,
    HT_ID17594,
    HT_ID17595,
    HT_ID17596,
    HT_ID17597,
    HT_ID17598,
    HT_ID17599,
    HT_ID17600,
    HT_ID17601,
    HT_ID17602,
    HT_ID17603,
    HT_ID17604,
    HT_ID17605,
    HT_ID17606,
    HT_ID17607,
    HT_ID17608,
    HT_ID17609,
    HT_ID17610,
    HT_ID17611,
    HT_ID17612,
    HT_ID17613,
    HT_ID17614,
    HT_ID17615,
    HT_ID17616,
    HT_ID17617,
    HT_ID17618,
    HT_ID17619,
    HT_ID17620,
    HT_ID17621,
    HT_ID17622,
    HT_ID17623,
    HT_ID17624,
    HT_ID17625,
    HT_ID17626,
    HT_ID17627,
    HT_ID17628,
    HT_MAX
};

enum VehHandlingFlags
{
    HF_1GEAR_BOOST = 0x00000001,
    HF_2GEAR_BOOST = 0x00000002,
    HF_NPC_ANTI_ROLL = 0x00000004,
    HF_NPC_NEUTRAL_HANDLING = 0x00000008,

    HF_NO_HANDBRAKE = 0x00000010,
    HF_STEER_REARWHEELS = 0x00000020,
    HF_HANDBRAKE_REARWHEELSTEER = 0x00000040,
    HF_ALT_STEERING_OPTION = 0x00000080,

    HF_WHEEL_F_NARROW_X2 = 0x00000100,
    HF_WHEEL_F_NARROW = 0x00000200,
    HF_WHEEL_F_WIDE = 0x00000400,
    HF_WHEEL_F_WIDE_X2 = 0x00000800,

    HF_WHEEL_R_NARROW_X2 = 0x00001000,
    HF_WHEEL_R_NARROW = 0x00002000,
    HF_WHEEL_R_WIDE = 0x00004000,
    HF_WHEEL_R_WIDE_X2 = 0x00008000,

    HF_HYDRAULICS_GEOMETRY = 0x00010000,
    HF_HYDRAULICS_INSTALLED = 0x00020000,
    HF_HYDRAULICS_NOT_AVAILABLE = 0x00040000,
    HF_NOS_INSTALLED = 0x00080000,

    HF_OFFROAD_ABILITIES = 0x00100000,
    HF_OFFROAD_ABILITIES_X2 = 0x00200000,
    HF_HALOGEN_LIGHTS = 0x00400000,
    HF_PROCESS_REARWHEEL_1ST = 0x00800000,

    HF_USE_TOPSPEED_LIMIT = 0x01000000,
    HF_LOW_RIDER = 0x02000000,
    HF_STREET_RACER = 0x04000000,

    HF_SWINGING_CHASSIS = 0x10000000,

    HF_LAST_AVAILABLE_FLAG = 0x80000000
};

enum VehModelFlags
{
    MF_IS_VAN = 0x00000001,
    MF_IS_BUS = 0x00000002,
    MF_IS_LOW = 0x00000004,
    MF_IS_BIG = 0x00000008,

    MF_REVERSE_BONNET = 0x00000010,
    MF_HANGING_BOOT = 0x00000020,
    MF_TAILGATE_BOOT = 0x00000040,
    MF_NOSWING_BOOT = 0x00000080,

    MF_NO_DOORS = 0x00000100,
    MF_TANDEM_SEATING = 0x00000200,
    MF_SIT_IN_BOAT = 0x00000400,
    MF_CONVERTIBLE = 0x00000800,

    MF_NO_EXHAUST = 0x00001000,
    MF_DOUBLE_EXHAUST = 0x00002000,
    MF_NO_1STPERSON_LOOKBEHIND = 0x00004000,
    MF_FORCE_DOORS_CHECK = 0x00008000,

    MF_AXLE_F_NOTILT = 0x00010000,
    MF_AXLE_F_SOLID = 0x00020000,
    MF_AXLE_F_MCPHERSON = 0x00040000,
    MF_AXLE_F_REVERSETILT = 0x00080000,

    MF_AXLE_R_NOTILT = 0x00100000,
    MF_AXLE_R_SOLID = 0x00200000,
    MF_AXLE_R_MCPHERSON = 0x00400000,
    MF_AXLE_R_REVERSETILT = 0x00800000,

    // these are tempory, will be integrated into vehicle type (probably)
    MF_IS_BIKE = 0x01000000,
    MF_IS_HELI = 0x02000000,
    MF_IS_PLANE = 0x04000000,
    MF_IS_BOAT = 0x08000000,

    MF_NO_PANEL_BOUNCING = 0x10000000,
    MF_DOUBLE_REAR_WHEELS = 0x20000000,
    // this is a tempory flag to ensure ground clearance until the model gets changed
    MF_FORCE_GRND_CLEARANCE = 0x40000000,
    //  MF_SUICIDE_REAR_DOORS   = 0x80000000,

    MF_IS_HATCHBACK = 0x80000000            // has window in boot that is pointing upwards (render order thing)
};

/**
 * Use to refer to types of weather, most in CWeather
 */
enum eWeather
{
    WEATHER_SUNNY = 0,
    WEATHER_CLOUDY,
    WEATHER_RAINY,
    WEATHER_FOGGY,
    WEATHER_VERY_SUNNY,
    WEATHER_VERY_RAINY,
    WEATHER_INSIDE
};

enum e3DMarkerType
{
    MARKER3D_ARROW,
    MARKER3D_CYLINDER2,
    MARKER3D_TUBE,
    MARKER3D_ARROW2,
    MARKER3D_TORUS,
    MARKER3D_CONE,
    MARKER3D_CONE_NO_COLLISION,
    MARKER3D_NUM
};

enum eMarkerSprite
{
    MARKER_SPRITE_NONE = 0,
    MARKER_SPRITE_BORDER,
    MARKER_SPRITE_CENTRE,
    MARKER_SPRITE_MAP_HERE,
    MARKER_SPRITE_NORTH,

    MARKER_SPRITE_AIRYARD,
    MARKER_SPRITE_GUN,
    MARKER_SPRITE_BARBERS,
    MARKER_SPRITE_BIG_SMOKE,
    MARKER_SPRITE_BOATYARD,
    MARKER_SPRITE_BURGERSHOT,
    MARKER_SPRITE_BULLDOZER,
    MARKER_SPRITE_CAT_PINK,
    MARKER_SPRITE_CESAR,
    MARKER_SPRITE_CHICKEN,
    MARKER_SPRITE_CJ,
    MARKER_SPRITE_CRASH1,
    MARKER_SPRITE_DINER,
    MARKER_SPRITE_EMMETGUN,
    MARKER_SPRITE_ENEMYATTACK,
    MARKER_SPRITE_FIRE,
    MARKER_SPRITE_GIRLFRIEND,
    MARKER_SPRITE_HOSPITAL,
    MARKER_SPRITE_LOCO,
    MARKER_SPRITE_MADDOG,
    MARKER_SPRITE_MAFIA,
    MARKER_SPRITE_MCSTRAP,
    MARKER_SPRITE_MOD_GARAGE,
    MARKER_SPRITE_OGLOC,
    MARKER_SPRITE_PIZZA,
    MARKER_SPRITE_POLICE,
    MARKER_SPRITE_PROPERTY_GREEN,
    MARKER_SPRITE_PROPERTY_RED,
    MARKER_SPRITE_RACE,
    MARKER_SPRITE_RYDER,
    MARKER_SPRITE_SAVEHOUSE,
    MARKER_SPRITE_SCHOOL,
    MARKER_SPRITE_MYSTERY,
    MARKER_SPRITE_SWEET,
    MARKER_SPRITE_TATTOO,
    MARKER_SPRITE_TRUTH,
    MARKER_SPRITE_WAYPOINT,
    MARKER_SPRITE_TORENO_RANCH,
    MARKER_SPRITE_TRIADS,
    MARKER_SPRITE_TRIADS_CASINO,
    MARKER_SPRITE_TSHIRT,
    MARKER_SPRITE_WOOZIE,
    MARKER_SPRITE_ZERO,
    MARKER_SPRITE_DATE_DISCO,
    MARKER_SPRITE_DATE_DRINK,
    MARKER_SPRITE_DATE_FOOD,
    MARKER_SPRITE_TRUCK,
    MARKER_SPRITE_CASH,
    MARKER_SPRITE_FLAG,
    MARKER_SPRITE_GYM,
    MARKER_SPRITE_IMPOUND,
    MARKER_SPRITE_RUNWAY_LIGHT,
    MARKER_SPRITE_RUNWAY,
    MARKER_SPRITE_GANG_B,
    MARKER_SPRITE_GANG_P,
    MARKER_SPRITE_GANG_Y,
    MARKER_SPRITE_GANG_N,
    MARKER_SPRITE_GANG_G,
    MARKER_SPRITE_SPRAY
};

/**
 * Used to decide how the marker is displayed in-game and on the radar
 */
enum eMarkerDisplay            // R*'s eMARKER_DISPLAY
{
    MARKER_DISPLAY_NEITHER = 0,            //  BLIPDISPLAY_NEITHER
    MARKER_DISPLAY_MARKERONLY,             //  BLIPDISPLAY_MARKERONLY
    MARKER_DISPLAY_BLIPONLY,               //  MARKER_DISPLAY_BLIPONLY
    MARKER_DISPLAY_BOTH                    //  BLIPDISPLAY_BOTH
};

enum eMarkerType
{
    MARKER_TYPE_UNUSED,
    MARKER_TYPE_CAR,
    MARKER_TYPE_CHAR,
    MARKER_TYPE_OBJECT,
    MARKER_TYPE_COORDS,
    MARKER_TYPE_CONTACT,
    MARKER_TYPE_SEARCHLIGHT,
    MARKER_TYPE_PICKUP,
    MARKER_TYPE_AIRSTRIP
};

enum eMarkerColor
{
    MARKER_COLOR_PLUM = 0,
    MARKER_COLOR_PALE_GREEN,
    MARKER_COLOR_PALE_BLUE,
    MARKER_COLOR_PALE_GREY,
    MARKER_COLOR_YELLOW,
    MARKER_COLOR_PINK,
    MARKER_COLOR_TURQUOISE,
    MARKER_COLOR_RED,
    MARKER_COLOR_BLUE,
    MARKER_COLOR_GREY,
    MARKER_COLOR_DARK_PINK,
    MARKER_COLOR_DARK_TURQUOISE,
};

enum ePickupState
{
    PUSTATE_ON,
    PUSTATE_OFF
};

enum ePickupType
{
    PICKUP_NONE,
    PICKUP_IN_SHOP,
    PICKUP_ON_STREET,
    PICKUP_ONCE,
    PICKUP_ONCE_TIMEOUT,
    PICKUP_ONCE_TIMEOUT_SLOW,
    PICKUP_COLLECTABLE1,
    PICKUP_IN_SHOP_OUT_OF_STOCK,
    PICKUP_MONEY,
    PICKUP_MINE_INACTIVE,
    PICKUP_MINE_ARMED,
    PICKUP_NAUTICAL_MINE_INACTIVE,
    PICKUP_NAUTICAL_MINE_ARMED,
    PICKUP_FLOATINGPACKAGE,
    PICKUP_FLOATINGPACKAGE_FLOATING,
    PICKUP_ON_STREET_SLOW,
    PICKUP_ASSET_REVENUE,
    PICKUP_PROPERTY_LOCKED,
    PICKUP_PROPERTY_FORSALE,
    PICKUP_MONEY_DOESNTDISAPPEAR,
    PICKUP_SNAPSHOT,
    PICKUP_2P,
    PICKUP_ONCE_FOR_MISSION
};

enum eDoorsSA
{

};

enum ePanelsSA
{

};

typedef int eEventEntity;

enum eEventType
{
    EVENT_NULL = 0,
    EVENT_ASSAULT,
    EVENT_RUN_REDLIGHT,
    EVENT_ASSAULT_POLICE,
    EVENT_GUNSHOT,
    EVENT_INJURED_PED,
    EVENT_DEAD_PED,
    EVENT_FIRE,
    EVENT_STEAL_CAR,
    EVENT_HIT_AND_RUN,
    EVENT_HIT_AND_RUN_COP,
    EVENT_SHOOT_PED,
    EVENT_SHOOT_COP,
    EVENT_EXPLOSION,
    EVENT_PED_SET_ON_FIRE,
    EVENT_COP_SET_ON_FIRE,
    EVENT_CAR_SET_ON_FIRE,
    EVENT_ASSAULT_NASTYWEAPON,
    EVENT_ASSAULT_NASTYWEAPON_POLICE,
    // extra eventy - not strictly 'events' but used to notice interesting stuff
    EVENT_ICECREAM,             /////
    EVENT_ATM,                  //  // queue for these 3
    EVENT_SHOPSTALL,            /////
    EVENT_SHOPWINDOW,
    EVENT_LAST_EVENT
};

enum eEventEntityType
{
    ENTITY_EVENT_PED = 0,
    ENTITY_EVENT_VEHICLE,
    ENTITY_EVENT_OBJECT
};

enum eCoronaType
{
    CORONATYPE_SHINYSTAR,
    CORONATYPE_HEADLIGHT,
    CORONATYPE_MOON,
    CORONATYPE_REFLECTION,
    CORONATYPE_HEADLIGHTLINE,
    CORONATYPE_HEX,
    CORONATYPE_CIRCLE,
    CORONATYPE_RING,
    CORONATYPE_STREAK,
    CORONATYPE_TORUS,
    CORONATYPE_NONE
};

enum eCoronaFlareTypeSA
{
    FLARETYPE_NONE,
    FLARETYPE_SUN,
    FLARETYPE_HEADLIGHTS
};

enum eCoronaLosCheckSA            // These should not be changed without changing stuff in ProcessLightsForEntity
{
    LOSCHECK_OFF = 0,
    LOSCHECK_ON
};

enum eCoronaSpecialSA
{
    SPECIALCORONA_NONE,
    SPECIALCORONA_SUNCORE,
    SPECIALCORONA_SUNCORONA,
    SPECIALCORONA_SUNMOON
};

enum eCoronaUnkSA
{
    CORREFL_NONE,
    CORREFL_SIMPLE
};

enum eCoronaTrailSA
{
    TRAIL_OFF,
    TRAIL_ON
};

enum ePedType
{
    PEDTYPE_PLAYER1 = 0,
    PEDTYPE_PLAYER2,                   // 2nd player in single player game (using 2nd pad)
    PEDTYPE_PLAYER_NETWORK,            // Player controlled over the network (not by this machine)
    PEDTYPE_PLAYER_UNUSED,             // Not used at the moment
    PEDTYPE_CIVMALE,
    PEDTYPE_CIVFEMALE,
    PEDTYPE_COP,
    PEDTYPE_GANG1,            // 8bits
    PEDTYPE_GANG2,
    PEDTYPE_GANG3,
    PEDTYPE_GANG4,
    PEDTYPE_GANG5,
    PEDTYPE_GANG6,
    PEDTYPE_GANG7,
    PEDTYPE_GANG8,
    PEDTYPE_GANG9,            // 16bits
    PEDTYPE_GANG10,
    PEDTYPE_DEALER,
    PEDTYPE_MEDIC,
    PEDTYPE_FIRE,
    PEDTYPE_CRIMINAL,
    PEDTYPE_BUM,
    PEDTYPE_PROSTITUTE,
    PEDTYPE_SPECIAL,            // 24bits
    PEDTYPE_MISSION1,
    PEDTYPE_MISSION2,
    PEDTYPE_MISSION3,
    PEDTYPE_MISSION4,
    PEDTYPE_MISSION5,
    PEDTYPE_MISSION6,
    PEDTYPE_MISSION7,
    PEDTYPE_MISSION8,            // 32bits
    // WE'RE USING BIT-FLAGS FOR PED AQUANTANCES
    // SO 32 IS THE MAX NUMBER OF PED TYPES WE CAN HAVE!!!!
    PEDTYPE_LAST_PEDTYPE
};

enum ePedState
{
    PED_NONE = 0,
    PED_IDLE,
    PED_LOOK_ENTITY,
    PED_LOOK_HEADING,
    PED_WANDER_RANGE,
    PED_WANDER_PATH,
    PED_SEEK_POSITION,
    PED_SEEK_ENTITY,
    PED_FLEE_POSITION,
    PED_FLEE_ENTITY,
    PED_PURSUE,
    PED_FOLLOW_PATH,
    PED_SNIPER_MODE,
    PED_ROCKETLAUNCHER_MODE,
    PED_DUMMY,
    PED_PAUSE,
    PED_ATTACK,
    PED_FIGHT,            // new close combat fist fight mode
    PED_FACE_PHONE,
    PED_MAKE_PHONECALL,
    PED_CHAT,
    PED_MUG,
    PED_AIMGUN,
    PED_AI_CONTROL,
    PED_SEEK_CAR,            // 24
    PED_SEEK_BOAT_POSITION,
    PED_FOLLOW_ROUTE,
    PED_CPR,
    PED_SOLICIT,
    PED_BUY_ICE_CREAM,
    PED_INVESTIGATE_EVENT,
    PED_EVADE_STEP,
    PED_ON_FIRE,
    PED_SUNBATHE,
    PED_FLASH,
    PED_JOG,
    PED_ANSWER_MOBILE,
    PED_HANG_OUT,
    PED_STATES_NO_AI,            // only put states after here that do not require AI, put other ones before this
    PED_ABSEIL_FROM_HELI,
    PED_SIT,
    PED_JUMP,
    PED_FALL,
    PED_GETUP,
    PED_STAGGER,
    PED_EVADE_DIVE,
    PED_STATES_CAN_SHOOT,            // only put states before here than ped can be shot during
    PED_ENTER_TRAIN,
    PED_EXIT_TRAIN,
    PED_ARREST_PLAYER,
    PED_DRIVING,            // 50
    PED_PASSENGER,
    PED_TAXI_PASSENGER,
    PED_OPEN_DOOR,
    PED_DIE,
    PED_DEAD,
    PED_CARJACK,
    PED_DRAGGED_FROM_CAR,
    PED_ENTER_CAR,
    PED_STEAL_CAR,
    PED_EXIT_CAR,
    PED_HANDS_UP,
    PED_ARRESTED,
    PED_DEPLOY_STINGER,

    PED_NUM_STATES
};

enum eMoveState
{
    PEDMOVE_NONE = 0,
    PEDMOVE_STILL,
    PEDMOVE_TURN_L,
    PEDMOVE_TURN_R,
    PEDMOVE_WALK,
    // #ifdef GTA_MIAMI
    PEDMOVE_JOG,
    // #endif
    PEDMOVE_RUN,
    PEDMOVE_SPRINT
};
/*
enum eMoveStateVC
{
    PEDMOVE_NONE,
    PEDMOVE_STILL,
    PEDMOVE_WALK,
    PEDMOVE_JOG,
    PEDMOVE_RUN,
    PEDMOVE_SPRINT,
    PEDMOVE_THROWN
};*/

enum eObjective
{
    NO_OBJ = 0,            // 0
    WAIT_ON_FOOT,
    WAIT_ON_FOOT_FOR_COP,
    FLEE_ON_FOOT_TILL_SAFE,
    GUARD_SPOT,
    GUARD_AREA,
    WAIT_IN_CAR,
    WAIT_IN_CAR_THEN_GET_OUT,
    KILL_CHAR_ON_FOOT,
    KILL_CHAR_ANY_MEANS,
    FLEE_CHAR_ON_FOOT_TILL_SAFE,            // 10
    FLEE_CHAR_ON_FOOT_ALWAYS,
    GOTO_CHAR_ON_FOOT,
    GOTO_CHAR_ON_FOOT_WALKING,
    HASSLE_CHAR,
    FOLLOW_CHAR_IN_FORMATION,
    LEAVE_CAR,
    ENTER_CAR_AS_PASSENGER,
    ENTER_CAR_AS_DRIVER,
    FOLLOW_CAR_IN_CAR,
    FIRE_AT_OBJECT_FROM_VEHICLE,            // 20
    DESTROY_OBJECT,
    DESTROY_CAR,
    GOTO_AREA_ANY_MEANS,
    GOTO_AREA_ON_FOOT,
    RUN_TO_AREA,
    GOTO_AREA_IN_CAR,
    FOLLOW_CAR_ON_FOOT_WITH_OFFSET,
    GUARD_ATTACK,
    SET_LEADER,
    FOLLOW_ROUTE,            // 30
    SOLICIT_VEHICLE,
    HAIL_TAXI,
    CATCH_TRAIN,
    BUY_ICE_CREAM,
    STEAL_ANY_CAR,
    STEAL_ANY_MISSION_CAR,
    MUG_CHAR,
    LEAVE_CAR_AND_DIE,
    GOTO_SEAT_ON_FOOT,
    GOTO_ATM_ON_FOOT,            // 40
    FLEE_CAR,
    SUN_BATHE,
    GOTO_BUS_STOP_ON_FOOT,
    GOTO_PIZZA_ON_FOOT,
    GOTO_SHELTER_ON_FOOT,
    AIM_GUN_AT,
    WANDER,
    WAIT_ON_FOOT_AT_SHELTER,
    SPRINT_TO_AREA,
    KILL_CHAR_ON_BOAT,            // 50
    SOLICIT_FOOT,
    WAIT_ON_FOOT_AT_BUS_STOP,
    GOTO_ICE_CREAM_VAN_ON_FOOT,
    WAIT_ON_FOOT_AT_ICE_CREAM_VAN            // 54
};

enum eWaitState
{
    PEDWAIT_FALSE = 0,            // 0
    PEDWAIT_TRAFFIC_LIGHTS,
    PEDWAIT_CROSS_ROAD,
    PEDWAIT_CROSS_ROAD_LOOK,
    PEDWAIT_LOOK_PED,
    PEDWAIT_LOOK_SHOP,
    PEDWAIT_LOOK_ACCIDENT,
    PEDWAIT_FACEOFF_GANG,
    PEDWAIT_DOUBLEBACK,
    PEDWAIT_HITWALL,
    PEDWAIT_TURN180,            // 10
    PEDWAIT_SURPRISE,
    PEDWAIT_STUCK,
    PEDWAIT_LOOK_ABOUT,
    PEDWAIT_PLAYANIM_DUCK,
    PEDWAIT_PLAYANIM_COWER,
    PEDWAIT_PLAYANIM_TAXI,
    PEDWAIT_PLAYANIM_HANDSUP,
    PEDWAIT_PLAYANIM_HANDSCOWER,
    PEDWAIT_PLAYANIM_CHAT,
    PEDWAIT_FINISH_FLEE,            // 20
    PEDWAIT_SIT_DOWN,
    PEDWAIT_SIT_DOWN_RVRS,
    PEDWAIT_SIT_UP,
    PEDWAIT_SIT_IDLE,
    PEDWAIT_USE_ATM,
    PEDWAIT_SUN_BATHE_PRE,
    PEDWAIT_SUN_BATHE_DOWN,
    PEDWAIT_SUN_BATHE_IDLE,
    PEDWAIT_RIOT,
    PEDWAIT_FAST_FALL,            // 30
    PEDWAIT_BOMBER,
    PEDWAIT_STRIPPER,
    PEDWAIT_GROUND_ATTACK,
    PEDWAIT_LANCESITTING,
    PEDWAIT_PLAYANIM_HANDSUP_SIMPLE            // 35
};

enum eTireState
{
    TIRE_STATE_NORMAL = 0,
    TIRE_STATE_BURST
};

enum ePedVehicleAction
{
    VEHICLE_ACTION_GETOUT = 16,
    VEHICLE_ACTION_GETINASPASSENGER,
    VEHICLE_ACTION_GETINASDRIVER
};

enum eInVehicleCameraMode
{
    IN_VEHICLE_CAMERA_MODE_CLOSE = 1,
    IN_VEHICLE_CAMERA_MODE_MIDDLE,
    IN_VEHICLE_CAMERA_MODE_FAR,
    IN_VEHICLE_CAMERA_MODE_FIXED,
    IN_VEHICLE_CAMERA_MODE_CINEMATIC
};

enum
{
    FADING_OUT = 0,
    FADING_IN,
    NOT_FADING
};
enum
{
    CLEAR_SCREEN = 0,
    IN_MIDDLE_OF_FADING,
    DARK_SCREEN
};
enum
{
    NO_ONE = 0,
    SCRIPT_CAM_CONTROL,
    OBBE_CAM_CONTROL
};

enum eHandlingProperty
{
    HANDLING_MASS = 1,
    HANDLING_TURNMASS,
    HANDLING_DRAGCOEFF,
    HANDLING_CENTEROFMASS,
    HANDLING_PERCENTSUBMERGED,
    HANDLING_TRACTIONMULTIPLIER,
    HANDLING_DRIVETYPE,
    HANDLING_ENGINETYPE,
    HANDLING_NUMOFGEARS,
    HANDLING_ENGINEACCELERATION,
    HANDLING_ENGINEINERTIA,
    HANDLING_MAXVELOCITY,
    HANDLING_BRAKEDECELERATION,
    HANDLING_BRAKEBIAS,
    HANDLING_ABS,
    HANDLING_STEERINGLOCK,
    HANDLING_TRACTIONLOSS,
    HANDLING_TRACTIONBIAS,
    HANDLING_SUSPENSION_FORCELEVEL,
    HANDLING_SUSPENSION_DAMPING,
    HANDLING_SUSPENSION_HIGHSPEEDDAMPING,
    HANDLING_SUSPENSION_UPPER_LIMIT,
    HANDLING_SUSPENSION_LOWER_LIMIT,
    HANDLING_SUSPENSION_FRONTREARBIAS,
    HANDLING_SUSPENSION_ANTIDIVEMULTIPLIER,
    HANDLING_COLLISIONDAMAGEMULTIPLIER,
    HANDLING_SEATOFFSETDISTANCE,
    HANDLING_MONETARY,
    HANDLING_HANDLINGFLAGS,
    HANDLING_MODELFLAGS,
    HANDLING_HEADLIGHT,
    HANDLING_TAILLIGHT,
    HANDLING_ANIMGROUP,
    HANDLING_MAX,
};
enum eWeaponProperty
{
    WEAPON_INVALID_PROPERTY = 0,
    WEAPON_WEAPON_RANGE,
    WEAPON_TARGET_RANGE,
    WEAPON_ACCURACY,
    WEAPON_DAMAGE,
    WEAPON_LIFE_SPAN,
    WEAPON_FIRING_SPEED,
    WEAPON_SPREAD,
    WEAPON_MAX_CLIP_AMMO,
    WEAPON_MOVE_SPEED,
    WEAPON_FLAGS,
    WEAPON_ANIM_GROUP,
    WEAPON_TYPE_SET_DISABLED,
    WEAPON_FIRETYPE,

    WEAPON_MODEL,
    WEAPON_MODEL2,

    WEAPON_SLOT,

    WEAPON_FIRE_OFFSET,

    WEAPON_SKILL_LEVEL,
    WEAPON_REQ_SKILL_LEVEL,

    WEAPON_ANIM_LOOP_START,
    WEAPON_ANIM_LOOP_STOP,
    WEAPON_ANIM_LOOP_RELEASE_BULLET_TIME,

    WEAPON_ANIM2_LOOP_START,
    WEAPON_ANIM2_LOOP_STOP,
    WEAPON_ANIM2_LOOP_RELEASE_BULLET_TIME,

    WEAPON_ANIM_BREAKOUT_TIME,

    WEAPON_SPEED,
    WEAPON_RADIUS,

    WEAPON_AIM_OFFSET,

    WEAPON_DEFAULT_COMBO,
    WEAPON_COMBOS_AVAILABLE,

    WEAPON_FLAG_AIM_NO_AUTO,            // 0x000001 - cant auto target to aim       (disable automatic up/down adjustment when firing without aiming)
    WEAPON_FLAG_FIRST = WEAPON_FLAG_AIM_NO_AUTO,
    WEAPON_FLAG_AIM_ARM,                   // 0x000002 - only needs arm to aim         (ie pistol/shotgun/tec9/uzi)
    WEAPON_FLAG_AIM_1ST_PERSON,            // 0x000004 - uses 1st person aim           (ie sniper/rpg-hs
    WEAPON_FLAG_AIM_FREE,                  // 0x000008 - can only use free aiming      (ie country sniper/flame thrower/minigun/fire extinguisher)
    WEAPON_FLAG_MOVE_AND_AIM,              // 0x000010 - can move and aim at same time
    WEAPON_FLAG_MOVE_AND_SHOOT,            // 0x000020 - can move and fire at same time
    WEAPON_FLAG_UNKNOWN_0040,
    WEAPON_FLAG_UNKNOWN_0080,
    WEAPON_FLAG_TYPE_THROW,               // 0x000100 - is a throwing weapon          (ie satchel)
    WEAPON_FLAG_TYPE_HEAVY,               // 0x000200 - heavy weapon - can't jump     (ie flame thrower/rpgs/minigun)
    WEAPON_FLAG_TYPE_CONSTANT,            // 0x000400 - fires every frame within loop (ie paint spray)
    WEAPON_FLAG_TYPE_DUAL,                // 0x000800 - can use 2x guns at same time  (ie pistol/shotgun/tec9/uzi)
    WEAPON_FLAG_ANIM_RELOAD,              // 0x001000 - weapon has reload anims       (ie everything except shotgun/snipers/flame thrower/rpgs/minigun/satchel)
    WEAPON_FLAG_ANIM_CROUCH,              // 0x002000 - weapon has crouching anims    (ie everything except flame thrower/rpgs/minigun/satchel)
    WEAPON_FLAG_ANIM_RELOAD_LOOP,            // 0x004000 - loop from end of reload to fire loop start
    WEAPON_FLAG_ANIM_RELOAD_LONG,            // 0x008000 - force a longer reload time!   (ie rpgs/snipers)
    WEAPON_FLAG_SHOT_SLOWS,                  // 0x010000 - slows down                    (ie flame thrower)
    WEAPON_FLAG_SHOT_RAND_SPEED,             // 0x020000 - random speed                  (ie flame thrower)
    WEAPON_FLAG_SHOT_ANIM_ABRUPT,            // 0x040000 - force the anim to finish player after aim/fire rather than blending out   (ie rpgs)
    WEAPON_FLAG_SHOT_EXPANDS,                // 0x080000 - expands
    WEAPON_FLAG_LAST = WEAPON_FLAG_SHOT_EXPANDS,

    WEAPON_FIRE_ROTATION,
};

enum eVehicleComponent
{
    VEHICLE_COMPONENT_CHASIS,
    VEHICLE_COMPONENT_WHEEL_FRONT_RIGHT,
    VEHICLE_COMPONENT_WHEEL_FRONT_LEFT,
    VEHICLE_COMPONENT_WHEEL_REAR_RIGHT,
    VEHICLE_COMPONENT_WHEEL_REAR_LEFT,
    VEHICLE_COMPONENT_DOOR_1,
    VEHICLE_COMPONENT_DOOR_2,
    VEHICLE_COMPONENT_DOOR_3,
    VEHICLE_COMPONENT_DOOR_4,
    VEHICLE_COMPONENT_BUMPER_1,
    VEHICLE_COMPONENT_BUMPER_2,
    VEHICLE_COMPONENT_BONET,
    VEHICLE_COMPONENT_BOOT,
    VEHICLE_COMPONENT_WINDSCREEN,
    VEHICLE_COMPONENT_EXHAUST,
    VEHICLE_COMPONENT_SPECIAL_1,
    VEHICLE_COMPONENT_SPECIAL_2,
    VEHICLE_COMPONENT_SPECIAL_3,
    VEHICLE_COMPONENT_SPECIAL_4,
    VEHICLE_COMPONENT_SPECIAL_5,
    VEHICLE_COMPONENT_WINGLF,
    VEHICLE_COMPONENT_WINGRF,
    VEHICLE_COMPONENT_EXTRA_1,
    VEHICLE_COMPONENT_EXTRA_2,
    VEHICLE_COMPONENT_MAX,
};

enum eVehicleDummies
{
    LIGHT_FRONT_MAIN = 0,
    LIGHT_REAR_MAIN,
    LIGHT_FRONT_SECONDARY,
    LIGHT_REAR_SECONDARY,
    SEAT_FRONT,
    SEAT_REAR,
    EXHAUST,
    ENGINE,
    GAS_CAP,
    TRAILER_ATTACH,
    HAND_REST,
    EXHAUST_SECONDARY,
    WING_AIRTRAIL,
    VEH_GUN,
    VEHICLE_DUMMY_COUNT,
};

enum class eResizableVehicleWheelGroup
{
    FRONT_AXLE = 0,
    REAR_AXLE,
    ALL_WHEELS = 0xFF,
};

enum eObjectProperty
{
    OBJECT_PROPERTY_ALL,
    OBJECT_PROPERTY_MASS,
    OBJECT_PROPERTY_TURNMASS,
    OBJECT_PROPERTY_AIRRESISTANCE,
    OBJECT_PROPERTY_ELASTICITY,
    OBJECT_PROPERTY_CENTEROFMASS,
    OBJECT_PROPERTY_BUOYANCY,
    OBJECT_PROPERTY_MAX,
};

enum class eShadowType
{
    // use only color instead of texture
    PLANE = -1,
    CAR,
    PED,
    HELI,
    BIKE,
    RCBARON,
    EXPLOSION,
    HEADLIGHT1,
    HEADLIGHT2,
    BLOOD,
    HEADMAN,
    WINCRACK,
    LAMP,
    _COUNT,
};

namespace eObjectGroup
{
    enum Modifiable
    {
        MASS,
        TURNMASS,
        AIRRESISTANCE,
        ELASTICITY,
        BUOYANCY,
        UPROOTLIMIT,
        COLDAMAGEMULTIPLIER,
        COLDAMAGEEFFECT,
        SPECIALCOLRESPONSE,
        CAMERAAVOID,
        EXPLOSION,
        FXTYPE,
        FXOFFSET,
        FXSYSTEM,
        SMASHMULTIPLIER,
        BREAKVELOCITY,
        BREAKVELOCITYRAND,
        BREAKMODE,
        SPARKSONIMPACT
    };

    enum DamageEffect
    {
        NO_EFFECT = 0,
        CHANGE_MODEL = 1,
        SMASH_COMPLETELY = 20,
        CHANGE_THEN_SMASH = 21,
        BREAKABLE = 200,
        BREAKABLE_REMOVED = 202
    };

    enum CollisionResponse
    {
        NO_RESPONSE,
        LAMPPOST,
        SMALLBOX,
        BIGBOX,
        FENCEPART,
        GRENADE,
        SWINGDOOR,
        LOCKDOOR,
        HANGING,
        POOLBALL
    };

    enum FxType
    {
        NO_FX,
        PLAY_ON_HIT,
        PLAY_ON_DESTROYED,
        PLAY_ON_HIT_DESTROYED
    };

    enum BreakMode
    {
        NOT_BY_GUN,
        BY_GUN,
        SMASHABLE,
    };
}            // namespace eObjectGroup

enum eSoundEffectType;

namespace eSoundEffectParams
{
    enum class Chorus
    {
        WET_DRY_MIX,
        DEPTH,
        FEEDBACK,
        FREQUENCY,
        WAVEFORM,
        DELAY,
        PHASE,
    };

    enum class Compressor
    {
        GAIN,
        ATTACK,
        RELEASE,
        THRESHOLD,
        RATIO,
        PREDELAY,
    };

    enum class Distortion
    {
        GAIN,
        EDGE,
        POST_EQ_CENTER_FREQUENCY,
        POST_EQ_BANDWIDTH,
        PRE_LOWPASS_CUTOFF,
    };

    enum class Echo
    {
        WET_DRY_MIX,
        FEEDBACK,
        LEFT_DELAY,
        RIGHT_DELAY,
        PAN_DELAY,
    };

    enum class Flanger
    {
        WET_DRY_MIX,
        DEPTH,
        FEEDBACK,
        FREQUENCY,
        WAVEFORM,
        DELAY,
        PHASE,
    };

    enum class Gargle
    {
        RATE_HZ,
        WAVE_SHAPE,
    };

    enum class I3DL2Reverb
    {
        ROOM,
        ROOM_HF,
        ROOM_ROLLOFF_FACTOR,
        DECAY_TIME,
        DECAY_HF_RATIO,
        REFLECTIONS,
        REFLECTIONS_DELAY,
        REVERB,
        REVERB_DELAY,
        DIFFUSION,
        DENSITY,
        HF_REFERENCE,
    };

    enum class ParamEq
    {
        CENTER,
        BANDWIDTH,
        GAIN,
    };

    enum class Reverb
    {
        IN_GAIN,
        REVERB_MIX,
        REVERB_TIME,
        HIGH_FREQ_RT_RATIO,
    };
}            // namespace eSoundEffectParams
